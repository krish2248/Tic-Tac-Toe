/* General styles */
*, *::after, *::before {
  box-sizing: border-box;
}

:root {
  --cell-size: 100px;
  --mark-size: calc(var(--cell-size) * .9);
}

/* Light mode gradient background */
body {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100vh;
  margin: 0;
  background: linear-gradient(135deg, #ffffff, #d9e4f5); /* Light gradient */
  color: black;
  transition: background 0.3s, color 0.3s;
  padding-top: 60px; /* Prevent overlap with header */
}

/* Dark mode gradient background */
body.dark-mode {
  background: linear-gradient(135deg, #121212, #3a3a3a); /* Dark gradient */
  color: white;
}

/* Header styles */
.header {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 20px;
  background: linear-gradient(135deg, #ffffff, #d9e4f5); /* Light gradient */
  border-bottom: 2px solid #000;
  z-index: 1000;
  color: black;
}

body.dark-mode .header {
  background: linear-gradient(135deg, #121212, #3a3a3a); /* Dark gradient */
  border-bottom: 2px solid #fff;
  color: white;
}

/* Footer styles */
.footer {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 20px;
  background: linear-gradient(135deg, #ffffff, #d9e4f5); /* Light gradient */
  border-top: 2px solid #000;
  color: black;
  position: fixed;
  bottom: 0;
  width: 100%;
  z-index: 1000;
}

body.dark-mode .footer {
  background: linear-gradient(135deg, #121212, #3a3a3a); /* Dark gradient */
  border-top: 2px solid #fff;
  color: white;
}

.footer-links {
  display: flex;
  gap: 20px;
}

/* Footer links */
.footer-links a {
  color: black;
  text-decoration: none;
  font-size: 1rem;
  transition: color 0.3s;
}

.footer-links a:hover {
  color: gray;
}

body.dark-mode .footer-links a {
  color: white;
}

body.dark-mode .footer-links a:hover {
  color: lightgray;
}

/* Dark mode toggle button */
.dark-mode-toggle {
  font-size: 1.5rem; /* Adjust font size for text */
  background: none; /* Remove background color */
  border: none;
  cursor: pointer;
  color: inherit; /* Match the text color to the current mode */
  transition: none; /* Remove hover transition */
  padding: 5px 10px; /* Add some padding for better appearance */
  text-transform: uppercase; /* Make the text uppercase for consistency */
}

/* Remove hover effect */
.dark-mode-toggle:hover {
  transform: none; /* Disable scaling effect */
  background: none; /* Ensure no background change */
  color: inherit; /* Ensure no color change */
}

/* Score container */
.score-container {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 50px;
}

/* Add gradient effect to the score box */
.score {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 150px;
  padding: 20px;
  border: 2px solid #000;
  border-radius: 5px;
  background: linear-gradient(135deg, #ffffff, #d9e4f5); /* Light gradient */
}

body.dark-mode .score {
  background: linear-gradient(135deg, #121212, #3a3a3a); /* Dark gradient */
  border-color: white;
}

/* Board styles */
.board {
  display: grid;
  grid-template-columns: repeat(3, var(--cell-size));
  grid-template-rows: repeat(3, var(--cell-size));
  gap: 5px;
}

/* Styles for X and O marks */
.cell.x::before {
  content: 'X';
  font-size: var(--mark-size);
  color: black; /* Black color for X in light mode */
  font-weight: bold;
}

body.dark-mode .cell.x::before {
  color: white; /* White color for X in dark mode */
}

.cell.circle::before {
  content: 'O';
  font-size: var(--mark-size);
  color: black; /* Black color for O in light mode */
  font-weight: bold;
}

body.dark-mode .cell.circle::before {
  color: white; /* White color for O in dark mode */
}

/* Center the marks inside the cells */
.cell {
  width: var(--cell-size);
  height: var(--cell-size);
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  border: 1px solid #000;
  font-size: 2rem;
  cursor: pointer;
  transition: background-color 0.3s;
}

body.dark-mode .cell {
  border-color: white;
}

/* Highlight winning cells */
.cell.winning {
  background-color: #4caf50; /* Green background for winning cells */
  animation: pulse 1s infinite;
}

body.dark-mode .cell.winning {
  background-color: white; /* White background for winning cells in dark mode */
  color: black; /* Black text for X and O in dark mode */
}

body:not(.dark-mode) .cell.winning {
  background-color: black; /* Black background for winning cells in light mode */
  color: white; /* White text for X and O in light mode */
}

@keyframes pulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
}

/* Timer */
.timer {
  font-size: 1.5rem;
  margin-top: 10px;
  color: #ff5722;
}

/* Winning message */
.winning-message {
  display: none;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
  background-color: rgba(0, 0, 0, 0.8);
  color: #fff;
  padding: 20px;
  border-radius: 10px;
}

.winning-message button {
  font-size: 3rem;
  background-color: white;
  border: 1px solid black;
  padding: 0.25em 0.5em;
  cursor: pointer;
}

.winning-message button:hover {
  background-color: black;
  color: white;
  border-color: white;
}

.winning-message.show {
  display: flex;
}

/* Winning message text styling */
.winning-message div[data-winning-message-text] {
  font-size: 3rem; /* Increase font size for the message */
  font-weight: bold;
  color: white; /* White text for all modes */
}

body.dark-mode .winning-message div[data-winning-message-text] {
  color: white; /* Ensure white text in dark mode */
}

/* Buttons styling */
button {
  font-size: 1.5rem;
  padding: 10px 20px;
  border: 2px solid black;
  background-color: black;
  color: white;
  border-radius: 5px;
  cursor: pointer;
  transition: none; /* Remove hover transition */
}

button:hover {
  background-color: black; /* Keep the same solid black background */
  color: white; /* Keep the same white text */
  border-color: black; /* Keep the same border color */
}

body.dark-mode button {
  background-color: black; /* Solid black background in dark mode */
  color: white; /* White text in dark mode */
  border-color: black; /* Solid black border in dark mode */
}

body.dark-mode button:hover {
  background-color: black; /* Keep the same solid black background */
  color: white; /* Keep the same white text */
  border-color: black; /* Keep the same border color */
}

/* Restart Button Container */
.restart-container {
  display: flex;
  justify-content: center; /* Center the button horizontally */
  margin-top: 20px; /* Add spacing above the button */
  margin-bottom: 20px; /* Add spacing below the button */
}

/* Restart Button Styling */
#restartButton {
  font-size: 2rem; /* Increase font size */
  padding: 15px 30px; /* Increase padding for a larger button */
  border: 2px solid black;
  background-color: black; /* Solid black background */
  color: white; /* White text */
  border-radius: 10px; /* Slightly rounder corners */
  cursor: pointer;
  transition: background-color 0.3s, color 0.3s;
}

#restartButton:hover {
  background-color: white; /* White background on hover */
  color: black; /* Black text on hover */
}

body.dark-mode #restartButton {
  background-color: white; /* White background in dark mode */
  color: black; /* Black text in dark mode */
  border-color: white;
}

body.dark-mode #restartButton:hover {
  background-color: black; /* Black background on hover in dark mode */
  color: white; /* White text on hover in dark mode */
}

/* Reset Button Container */
.reset-container {
  display: flex;
  justify-content: center;
  margin-top: 40px; /* Add spacing above the button to move it down */
  margin-bottom: 40px; /* Keep spacing below the button */
}

/* Reset Button Styling */
#resetScoreButton {
  font-size: 1.5rem;
  padding: 10px 20px;
  border: 2px solid black;
  background-color: black; /* Solid black background */
  color: white; /* White text */
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s, color 0.3s;
}

#resetScoreButton:hover {
  background-color: white; /* White background on hover */
  color: black; /* Black text on hover */
}

body.dark-mode #resetScoreButton {
  background-color: white; /* White background in dark mode */
  color: black; /* Black text in dark mode */
  border-color: white;
}

body.dark-mode #resetScoreButton:hover {
  background-color: black; /* Black background on hover in dark mode */
  color: white; /* White text on hover in dark mode */
}

/* Responsive design */
@media (max-width: 600px) {
  :root {
    --cell-size: 60px;
  }

  .score {
    width: 100px;
    padding: 10px;
  }

  .dark-mode-toggle {
    font-size: 2rem;
  }
}